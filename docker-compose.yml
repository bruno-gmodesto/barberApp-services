services:
  mysql:
    image: mysql:8.0
    container_name: barberapp-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: barberApp_auth
    ports:
      - "4000:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - barberapp-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: barberapp-auth
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/barberApp_auth
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      USER_SERVICE_URL: http://user-service:8081
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - barberapp-network
    restart: unless-stopped

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: barberapp-user
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/barberApp_users
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      AUTH_SERVICE_URL: http://auth-service:8082
    ports:
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - barberapp-network
    restart: unless-stopped

  schedule-service:
    build:
      context: ./schedule-service
      dockerfile: Dockerfile
    container_name: barberapp-schedule
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/barberApp_schedules
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      USER_SERVICE_URL: http://user-service:8081
    ports:
      - "8083:8083"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - barberapp-network
    restart: unless-stopped

networks:
  barberapp-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
